name: Full Mautic Deployment

on:
  push:
    branches:
      - main

env:
  IP: 138.197.199.81
  MAUTIC_PORT: 8001
  EMAIL_ADDRESS: ContactUs+AutoCreatedAdmin@CallThatAgent.com
  DOMAIN: engine.call-that.com

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy & Setup Mautic on VPS
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "✅ Skipping domain IP check for CI/CD deployment"

            # Navigate to deployment directory
            cd /var/www || mkdir -p /var/www && cd /var/www

            # Docker setup
            docker compose build
            docker compose up -d db mautic_web

            # Wait for DB container
            DB=$(docker compose ps -q db)
            until docker exec "$DB" pg_isready -U postgres >/dev/null 2>&1; do
              echo "Waiting for DB..."
              sleep 2
            done

            # Wait for Mautic web container
            WEB=$(docker compose ps -q mautic_web)
            until docker exec "$WEB" sh -c 'echo Running'; do
              echo "Waiting for Mautic Web..."
              sleep 2
            done

            # Mautic install with retries
            MAX_RETRIES=5
            RETRY_COUNT=0
            SUCCESS=0
            while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
              echo "Attempt $((RETRY_COUNT+1)) to install Mautic..."
              if docker compose exec -T -u www-data -w /var/www/html "$WEB" php ./bin/console mautic:install --force --admin_email $EMAIL_ADDRESS --admin_password ${{ secrets.MAUTIC_PASSWORD }} http://$IP:$MAUTIC_PORT; then
                SUCCESS=1
                break
              else
                echo "Install failed, retrying in 10s..."
                sleep 10
                RETRY_COUNT=$((RETRY_COUNT+1))
              fi
            done

            if [ $SUCCESS -eq 0 ]; then
              echo "❌ Mautic installation failed after $MAX_RETRIES attempts."
              exit 1
            fi

            docker compose up -d

            # Nginx configuration
            ln -sf /var/www/nginx-virtual-host-$DOMAIN /etc/nginx/sites-enabled/
            nginx -t && (systemctl start nginx || nginx -s reload)

            # Let's Encrypt certificate
            certbot --nginx -d $DOMAIN --non-interactive --agree-tos -m $EMAIL_ADDRESS

            # Cron job for renewal
            (crontab -l 2>/dev/null; echo "0 0 1 * * certbot renew --post-hook 'systemctl reload nginx'") | crontab -

            # Update Mautic site_url with retries
            MAX_RETRIES=30
            RETRY_COUNT=0
            echo "Waiting for Mautic to respond at https://$DOMAIN..."
            until curl -ks https://$DOMAIN | grep -q "Mautic" || [ $RETRY_COUNT -ge $MAX_RETRIES ]; do
              RETRY_COUNT=$((RETRY_COUNT+1))
              echo "Waiting for Mautic ($RETRY_COUNT/$MAX_RETRIES)..."
              sleep 5
            done

            if [ $RETRY_COUNT -ge $MAX_RETRIES ]; then
              echo "❌ Mautic not responding at https://$DOMAIN after waiting."
              exit 1
            fi

            docker compose exec -T "$WEB" sed -i "s|'site_url' => '.*',|'site_url' => 'https://$DOMAIN',|g" /var/www/html/config/local.php

            echo "✅ Deployment complete!"
