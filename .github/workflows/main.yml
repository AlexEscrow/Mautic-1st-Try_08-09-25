name: Full Mautic Deployment

on:
  push:
    branches:
      - main

env:
  IP: 138.197.199.81
  MAUTIC_PORT: 8001
  EMAIL_ADDRESS: ContactUs+AutoCreatedAdmin@CallThatAgent.com
  DOMAIN: engine.call-that.com

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Deploy and setup Mautic on VPS
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/deploy_key root@${{ env.IP }} bash -s <<'EOF'
export MAUTIC_PASSWORD="${MAUTIC_PASSWORD}"
export EMAIL_ADDRESS="${EMAIL_ADDRESS}"
export DOMAIN="${DOMAIN}"
export IP="${IP}"
export MAUTIC_PORT="${MAUTIC_PORT}"

cd /var/www || mkdir -p /var/www && cd /var/www

# If repo exists, reset & pull, else clone
if [ -d .git ]; then
    git reset --hard
    git pull
else
    git clone https://github.com/${GITHUB_REPOSITORY}.git .
fi

# Build and start Docker containers
docker compose build
docker compose up -d db --wait && docker compose up -d mautic_web --wait

# Wait for DB
until docker exec basic-mautic_db-1 pg_isready -U postgres >/dev/null 2>&1; do
    echo "Waiting for DB..."
    sleep 2
done

# Wait for Mautic web container
until docker exec basic-mautic_web-1 sh -c 'echo "Container running"'; do
    echo "Waiting for mautic_web..."
    sleep 2
done

# Install Mautic with retries
MAX_RETRIES=5
RETRY_COUNT=0
SUCCESS=0
while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
    echo "Attempt $((RETRY_COUNT+1)) to install Mautic..."
    if docker compose exec -T -u www-data -w /var/www/html mautic_web php ./bin/console mautic:install --force --admin_email $EMAIL_ADDRESS --admin_password $MAUTIC_PASSWORD http://$IP:$MAUTIC_PORT; then
        SUCCESS=1
        break
    else
        echo "Install failed, retrying..."
        sleep 10
        RETRY_COUNT=$((RETRY_COUNT+1))
    fi
done
if [ $SUCCESS -eq 0 ]; then
    echo "ERROR: Mautic installation failed."
    exit 1
fi

docker compose up -d

# Configure Nginx
SOURCE_PATH="/var/www/nginx-virtual-host-$DOMAIN"
TARGET_PATH="/etc/nginx/sites-enabled/nginx-virtual-host-$DOMAIN"
[ -L "$TARGET_PATH" ] && rm $TARGET_PATH
ln -s $SOURCE_PATH $TARGET_PATH

nginx -t
if ! pgrep -x nginx >/dev/null; then
    systemctl start nginx
else
    nginx -s reload
fi

# Obtain SSL certificate
certbot --nginx -d $DOMAIN --non-interactive --agree-tos -m $EMAIL_ADDRESS

# Ensure certbot renew cron job
if ! crontab -l | grep -q 'certbot renew'; then
    (crontab -l 2>/dev/null; echo "0 0 1 * * certbot renew --post-hook 'systemctl reload nginx'") | crontab -
fi

# Update Mautic site_url to HTTPS
docker compose exec -T mautic_web sed -i "s|'site_url' => '.*',|'site_url' => 'https://$DOMAIN',|g" /var/www/html/config/local.php

echo "✅ Deployment completed successfully"
EOF
        env:
          MAUTIC_PASSWORD: ${{ secrets.MAUTIC_PASSWORD }}
          EMAIL_ADDRESS: ${{ env.EMAIL_ADDRESS }}
          DOMAIN: ${{ env.DOMAIN }}
          IP: ${{ env.IP }}
          MAUTIC_PORT: ${{ env.MAUTIC_PORT }}

      - name: Verify Mautic HTTPS is up
        run: |
          DOMAIN=${{ env.DOMAIN }}
          MAX_RETRIES=30
          RETRY_COUNT=0
          echo "Waiting for Mautic at https://$DOMAIN..."
          until curl -ks https://$DOMAIN | grep -q "Mautic" || [ $RETRY_COUNT -ge $MAX_RETRIES ]; do
              RETRY_COUNT=$((RETRY_COUNT+1))
              echo "Waiting ($RETRY_COUNT/$MAX_RETRIES)..."
              sleep 5
          done

          if [ $RETRY_COUNT -ge $MAX_RETRIES ]; then
              echo "ERROR: Mautic not responding at https://$DOMAIN"
              exit 1
          fi

          echo "✅ Mautic is live at https://$DOMAIN"
